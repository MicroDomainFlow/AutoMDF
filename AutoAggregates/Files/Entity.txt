using {ProjectName}.Core.Domain.Aggregates.{Pluralize}.ValueObjects;

using FluentResults;

using MDF.Framework.SeedWork;
using MDF.Resources.Common;
using MDF.Resources.Common.FormattedMessages;

namespace {ProjectName}.Core.Domain.Aggregates.{Pluralize}.Entities;
public class {Singular}Entity : Entity
{
	public {Singular}Title Title { get; private set; } //{Singular}Title is value object
	
	private {Singular}Entity()
	{

	}
	private {Singular}Entity({Singular}Title title) : this()
	{
		Title = title;
	}

	public static Result<{Singular}Entity> Create(string? title)
	{
		Result<{Singular}Entity> result = new();


		var {SingularVar}Result = {Singular}Title.Create(title);
		result.WithErrors({SingularVar}Result.Errors);

		if (result.IsFailed)
		{
			return result;
		}

		var returnValue = new {Singular}Entity({SingularVar}Result.Value);
		result.WithValue(returnValue);
		return result;
	}
}
