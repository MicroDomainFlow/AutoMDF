using {ProjectName}.Core.Contracts.Aggregates.{Pluralize}.Commands;
using {ProjectName}.Core.Contracts.Aggregates.{Pluralize}.Queries;
using {ProjectName}.Core.Contracts.Aggregates.{Pluralize}.Queries.ResultViewModel;


using MDF.Framework.Endpoints.Api;
using MDF.Framework.Extensions.Results;

using MediatR;

using Microsoft.AspNetCore.Mvc;

namespace {ProjectName}.Endpoints.API.Controllers;
#error This file is generated by AutoMDF. This file must be edited before use. Delete this line when editing is complete.
[Route("api/[controller]/[action]")]
public class {Singular}Controller : BaseController
{
	private readonly ILogger<{Singular}Controller> _logger;
	public {Singular}Controller(IMediator mediator, ILogger<{Singular}Controller> logger) : base(mediator)
	{
		_logger = logger;
	}

	[ProducesResponseType(type: typeof(CustomResult<List<{Singular}QueryResult>>), statusCode: StatusCodes.Status200OK)]
	[HttpGet("")]
	public Task<IActionResult> GetAll{Singular}Async(GetAll{Singular}Query getAll{Singular}Query)
	{
		return QueryAsync<GetAll{Singular}Query, List<{Singular}QueryResult>>(getAll{Singular}Query);
	}

	[ProducesResponseType(type: typeof(CustomResult<Guid>), statusCode: StatusCodes.Status200OK)]
	[ProducesResponseType(type: typeof(CustomResult), statusCode: StatusCodes.Status400BadRequest)]
	[HttpPost("")]
	public Task<IActionResult> Create{Singular}Async([FromBody] Create{Singular}Command create{Singular}Command)
	{
		return CreateAsync<Create{Singular}Command, Guid>(create{SingularVar}Command);
	}

}
