using {ProjectName}.Core.Contracts.Aggregates.{Pluralize}.Queries;
using {ProjectName}.Core.Contracts.Aggregates.{Pluralize}.Queries.ResultViewModel;
using {ProjectName}.Core.Contracts.Aggregates.{Pluralize}.QueryRepositories;
using {ProjectName}.Infrastructure.Persistence.Sql.Queries.Common;
using {ProjectName}.Infrastructure.Persistence.Sql.Queries.Mapping;

using Gridify;

using MDF.Framework.Infrastructure.Queries;

using Microsoft.EntityFrameworkCore;
using Microsoft.Extensions.Logging;

namespace {ProjectName}.Infrastructure.Persistence.Sql.Queries.Aggregates.{Pluralize};
#error This file is generated by AutoMDF. This file must be edited before use. Delete this line when editing is complete.
public class {Singular}QueryEntityFrameworkRepository : BaseQueryRepository<QueryDbContext>, I{Singular}QueryRepository
{
	private readonly ILogger<{Singular}QueryEntityFrameworkRepository> _logger;
	public {Singular}QueryEntityFrameworkRepository(QueryDbContext dbContext, ILogger<{Singular}QueryEntityFrameworkRepository> logger) : base(dbContext)
	{
		_logger = logger;
	}

	//TODO Don't forget add DbSet<{Pluralize}> to Query db Context !
	public Task<List<{Singular}QueryResult>> ExecuteAsync(GetAll{Singular}Query query, CancellationToken cancellationToken = default)
	{
		return DbContext.{Pluralize}
						.To{Singular}QueryResult()//manual mapping
						.ApplyPaging(query.Page, query.PageSize)
						.ApplyFiltering(query.Filter)
						.ApplyOrdering(query.OrderBy)
						.ToListAsync(cancellationToken);
	}

}
